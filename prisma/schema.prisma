// This is your Prisma schema file

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Usuario {
  id              Int                @id @default(autoincrement())
  correo          String             @unique
  contrasena      String
  nombres         String
  apellidos       String
  telefono        String?
  edad            Int?
  sexo            String?            @db.Char(1)
  fecha_registro  DateTime           @default(now())
  evaluaciones    Evaluacion[]
  contactos       ContactoPsicologo[]
  chats           Chat[]

  @@map("usuarios")
}

model Psicologo {
  id           Int                @id @default(autoincrement())
  correo       String             @unique
  nombres      String
  apellidos    String
  telefono     String?
  especialidad String?
  activo       Boolean            @default(true)
  contactos    ContactoPsicologo[]
  chats        Chat[]

  @@map("psicologos")
}

model Pregunta {
  id          Int          @id @default(autoincrement())
  texto       String
  peso        Int          @default(1)
  respuestas  Respuesta[]

  @@map("preguntas")
}

model Evaluacion {
  id              Int          @id @default(autoincrement())
  usuario_id      Int
  usuario         Usuario      @relation(fields: [usuario_id], references: [id])
  fecha           DateTime     @default(now())
  puntaje_total   Int?
  estado_semaforo String?
  observaciones   String?
  respuestas      Respuesta[]

  @@map("evaluaciones")
}

model Respuesta {
  id                Int          @id @default(autoincrement())
  evaluacion_id     Int
  evaluacion        Evaluacion   @relation(fields: [evaluacion_id], references: [id], onDelete: Cascade)
  pregunta_id       Int
  pregunta          Pregunta     @relation(fields: [pregunta_id], references: [id])
  respuesta         Int?
  puntaje_calculado Int?

  @@map("respuestas")
}

model ContactoPsicologo {
  id              Int          @id @default(autoincrement())
  usuario_id      Int
  usuario         Usuario      @relation(fields: [usuario_id], references: [id])
  psicologo_id    Int
  psicologo       Psicologo    @relation(fields: [psicologo_id], references: [id])
  fecha_contacto  DateTime     @default(now())
  motivo          String?
  resultado       String?

  @@map("contactos_psicologos")
}

model Chat {
  id            Int             @id @default(autoincrement())
  usuario_id    Int
  usuario       Usuario         @relation(fields: [usuario_id], references: [id])
  psicologo_id  Int
  psicologo     Psicologo       @relation(fields: [psicologo_id], references: [id])
  creado_en     DateTime        @default(now())
  activo        Boolean         @default(true)
  mensajes      MensajeChat[]

  @@map("chats")
}

model MensajeChat {
  id           Int           @id @default(autoincrement())
  chat_id      Int
  chat         Chat          @relation(fields: [chat_id], references: [id], onDelete: Cascade)
  emisor_tipo  String
  emisor_id    Int
  mensaje      String
  enviado_en   DateTime      @default(now())

  @@map("mensajes_chat")
} 